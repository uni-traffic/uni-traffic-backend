// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String         @id @default(uuid())
  username         String         @unique
  email            String         @unique
  password         String
  isSuperAdmin     Boolean        @default(false)
  role             Role           @default(STUDENT)
  isDeleted        Boolean        @default(false)
  deletedAt        DateTime?
  createdAt        DateTime       @default(now())
  updatedAt        DateTime       @updatedAt
  vehicles         Vehicle[]
  violations       Violation[]
}


enum Role {
  ADMIN
  SECURITY
  STUDENT
  STAFF
}

model Vehicle {
  id             String   @id @default(uuid())
  ownerId        String
  licenseNumber  String   @unique
  stickerNumber  String   @unique
  isActive       Boolean  @default(true)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  owner          User     @relation(fields: [ownerId], references: [id], onDelete: Cascade)
  violations     Violation[]
}

model Violation {
  id             String   @id @default(uuid())
  vehicleId      String
  reportedBy     String
  violationType  String
  status         ViolationStatus @default(PENDING)
  timestamp      DateTime @default(now())
  vehicle        Vehicle  @relation(fields: [vehicleId], references: [id], onDelete: Cascade)
  reporter       User     @relation(fields: [reportedBy], references: [id], onDelete: Cascade)
}

enum ViolationStatus {
  PENDING
  RESOLVED
}




